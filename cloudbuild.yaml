steps:
  # Decrypt the file containing the key-
  - id: 'decrypt-file'
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - kms
      - decrypt
      - --ciphertext-file=id_rsa_2.enc
      - --plaintext-file=/root/.ssh/id_rsa
      - --location=global
      - --keyring=my-keyring
      - --key=github-key
    volumes:
      - name: 'ssh'
        path: /root/.ssh
  # Set up git with key and domain.
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod 600 /root/.ssh/id_rsa
        cat <<EOF >/root/.ssh/config
        Hostname github.com
        IdentityFile /root/.ssh/id_rsa
        EOF
        mv known_hosts /root/.ssh/known_hosts
    volumes:
      - name: 'ssh'
        path: /root/.ssh
  # Use git clone.
#  - name: 'gcr.io/cloud-builders/git'
#    args:
#      - clone
#      - git@github.com:[GIT-USERNAME]/[REPOSITORY]
#    volumes:
#      - name: 'ssh'
#        path: /root/.ssh
#  - id: 'build jar artifact'
#    name: 'gcr.io/cloud-builders/java/javac:8'
#    entrypoint: 'bash'
#    args: ['./gradlew', 'build']
#  - id: 'build docker image'
#    name: 'gcr.io/cloud-builders/docker'
#    args: ['build', '-t', 'gcr.io/$PROJECT_ID/spring-boot-hello-world:$SHORT_SHA.$BUILD_ID', '.']
#  - id: 'push docker image to registry'
#    name: 'gcr.io/cloud-builders/docker'
#    args: ['push', 'gcr.io/$PROJECT_ID/spring-boot-hello-world:$SHORT_SHA.$BUILD_ID']
  # Use git clone.
  - name: 'gcr.io/cloud-builders/git'
    args:
      - clone
      - git@github.com:[GIT-USERNAME]/[REPOSITORY]
    volumes:
      - name: 'ssh'
        path: /root/.ssh
  - id: 'tag version'
    name: 'gcr.io/cloud-builders/git'
    args:
    - tag
    - git@github.com:modestukasai/spring-boot-hello-world
    - image-$SHORT_SHA.$BUILD_ID
  - id: 'push new tags'
    name: 'gcr.io/cloud-builders/git'
    args:
    - push
    - git@github.com:modestukasai/spring-boot-hello-world
    - --tags
    volumes:
      - name: 'ssh'
        path: /root/.ssh